@use 'scss-properties' as prop; // dependency of sass-themes

@layer components {
  .button,
  .toggle {
    min-width: 2em;
    text-align: center;
  }

  .button {
    background-color: prop.set(--theme-bg, $lightness: mix --theme-tx 80%);

    &:hover {
      background-color: prop.set(
        --theme-bg,
        $hue: mix --theme-br 0%,
        $saturation: mix --theme-br 20%,
        $lightness: mix --theme-tx 80%
      );
    }

    &:invalid {
      background-color: prop.set(
        --theme-bg,
        $saturation: change 0%,
        $lightness: mix --theme-tx 90%
      );
      color: prop.set(
        --theme-bg,
        $saturation: change 0%,
        $lightness: mix --theme-tx 50%
      );
      cursor: not-allowed;
    }

    &:active {
      background-color: var(--theme-br);
      color: white;
    }

    &--active {
      background-color: var(--theme-br);
      color: white;

      &:hover {
        background-color: prop.set(
          --theme-br,
          $lightness: mix --theme-bg 85%,
          $saturation: mix --theme-bg 80%
        );
      }

      &:invalid {
        background-color: prop.set(
          --theme-bg,
          $hue: change 0deg,
          $saturation: change 40%,
          $lightness: mix --theme-tx 90%
        );
        color: prop.set(
          --theme-bg,
          $hue: change 0deg,
          $saturation: change 40%,
          $lightness: mix --theme-tx 50%
        );
      }
    }

    &--green {
      background-color: var(--theme-btn-green);
      &:hover {
        background-color: var(--theme-btn-green--light);
      }
      &:active {
        background-color: var(--theme-btn-green--dark);
      }
    }

    &--red {
      background-color: var(--theme-btn-red);
      &:hover {
        background-color: var(--theme-btn-red--light);
      }
      &:active {
        background-color: var(--theme-btn-red--dark);
      }
    }
  }
}

@use 'scss-properties' as prop; // dependency of sass-themes

@layer components {
  .button-list {
    --spacing: theme('spacing.2');
    padding-top: var(--spacing);
    padding-left: var(--spacing);
    user-select: none;

    & > * {
      margin-left: var(--spacing);
      margin-bottom: var(--spacing);
    }
  }

  .button,
  .toggle {
    min-width: 2em;
    text-align: center;
  }

  .button {
    background-color: prop.set(--theme-bg, $lightness: mix --theme-tx 80%);

    @media (hover: hover) {
      &:hover {
        background-color: prop.set(
          --theme-bg,
          $hue: mix --theme-br 0%,
          $saturation: mix --theme-br 20%,
          $lightness: mix --theme-tx 80%
        );
      }
    }

    &:active {
      background-color: var(--theme-br);
      color: white;
      -webkit-tap-highlight-color: transparent;
    }

    @media (hover: none) {
      &:active {
        background-color: prop.set(
          --theme-bg,
          $hue: mix --theme-br 0%,
          $saturation: mix --theme-br 20%,
          $lightness: mix --theme-tx 80%
        );
      }
    }

    &:invalid {
      background-color: prop.set(
        --theme-bg,
        $saturation: change 0%,
        $lightness: mix --theme-tx 90%
      );
      color: prop.set(
        --theme-bg,
        $saturation: change 0%,
        $lightness: mix --theme-tx 50%
      );
      cursor: not-allowed;

      &:active {
        background-color: prop.set(
          --theme-bg,
          $hue: change 0deg,
          $saturation: change 40%,
          $lightness: mix --theme-tx 90%
        );
        color: prop.set(
          --theme-bg,
          $hue: change 0deg,
          $saturation: change 40%,
          $lightness: mix --theme-tx 50%
        );
      }
    }

    &--active {
      background-color: var(--theme-br);
      color: white;

      @media (hover: hover) {
        &:hover {
          background-color: prop.set(
            --theme-br,
            $lightness: mix --theme-bg 85%,
            $saturation: mix --theme-bg 80%
          );
        }
      }

      &:active {
        background-color: prop.set(
          --theme-bg,
          $hue: mix --theme-br 0%,
          $saturation: mix --theme-br 20%,
          $lightness: mix --theme-tx 80%
        );
      }
    }

    &--green {
      background-color: var(--theme-btn-green);
      @media (hover: hover) {
        &:hover {
          background-color: var(--theme-btn-green--light);
        }
      }
      &:active {
        background-color: var(--theme-btn-green--dark);
      }
    }

    &--red {
      background-color: var(--theme-btn-red);
      @media (hover: hover) {
        &:hover {
          background-color: var(--theme-btn-red--light);
        }
      }
      &:active {
        background-color: var(--theme-btn-red--dark);
      }
    }
  }
}
